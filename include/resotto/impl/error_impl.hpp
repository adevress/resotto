/**
 * Copyright (c) 2018, Adrien Devresse <adev@adev.name>
 *
 * Boost Software License - Version 1.0
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
*
*/
#ifndef RESOTTO_ERROR_IMPL_HPP
#define RESOTTO_ERROR_IMPL_HPP

#include "../error.hpp"

namespace resotto{

//  error
inline error::error(){}

inline error::~error(){}

// session error

inline session_error::session_error(std::string msg) : _msg(msg){}

inline session_error::~session_error(){}

inline const char* session_error::what() const noexcept{
    return _msg.c_str();
}



namespace server{

// http req error

namespace http {

inline request_error::request_error(int code, std::string content) :_code(code), _msg(content){}


inline request_error::~request_error(){}

const char* request_error::what() const noexcept{
    return _msg.c_str();
}

int request_error::code() const noexcept{
    return _code;
}

} // http

} // server

} // resotto

#endif // RESOTTO_ERROR_HPP

/**
 * Copyright (c) 2018, Adrien Devresse <adev@adev.name>
 *
 * Boost Software License - Version 1.0
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
*
*/
#ifndef RESOTTO_ERROR_HPP
#define RESOTTO_ERROR_HPP

#include <stdexcept>

namespace resotto{

///
/// \brief base error class
///
class error : public std::exception{
public:
    error();
    virtual ~error();
};


///
/// \brief session error
///
/// session error will always kill the associated session
/// and disconnect the client
///
class session_error : public error{
public:
    session_error(std::string message);

    virtual ~session_error();

    const char* what() const noexcept;

private:
    std::string _msg;
};


namespace server {

namespace http {

///
/// \brief http request error
///
/// an http request error will send back to client
/// the corresponding error code and content
///
class request_error : public error{
public:
    request_error(int code, std::string content);
    virtual ~request_error();


    const char* what() const noexcept;

    int code() const noexcept;

private:
    int _code;
    std::string _msg;
};

} // http


} // server

} // resotto

#include "impl/error_impl.hpp"

#endif // RESOTTO_ERROR_HPP
